{"version":3,"sources":["typings.ts"],"names":["BadMessages"],"mappings":";;;;;;AA0CO,MAAMA,WAAW,GAAG,CACzB,KADyB,EAEzB,kCAFyB,EAGzB,qHAHyB,EAIzB,SAJyB,EAKzB,0IALyB,EAMzB,WANyB,EAOzB,OAPyB,EAQzB,QARyB,EASzB,SATyB,CAApB","sourceRoot":"/mnt/Documents/Projets/BotPress/botpress/modules/visualisation/src/backend","sourcesContent":["import * as sdk from 'botpress/sdk'\n\nimport { BotpressPredictor } from '../models/botpress_predictor'\nimport { BotpressEmbedder, PythonEmbedder } from '../models/embedder'\n\nexport type VisuState = {\n  embedder: BotpressEmbedder | PythonEmbedder\n  axiosConfig: sdk.AxiosBotConfig\n  predictor: BotpressPredictor\n  botId: string\n  ghost: sdk.ScopedGhostService\n  trainDatas: Data[]\n  testDatas: Data[]\n  language: string\n}\n\nexport type Data = {\n  utt: string\n  utt_emb: number[]\n  label?: number\n  intent: string\n}\n\nexport type RawData = {\n  name: string\n  contexts: string[]\n  utterances: { [lang: string]: string[] }\n  slots: any[]\n}\n\nexport type PlotData = {\n  x: number[]\n  y: number[]\n  z?: number[]\n  mode: string\n  type: string\n  name: string\n  text: string[]\n  marker: { size: number }\n}\n\nexport type Test = { id: string; utterance: string; context: string; conditions: [string, string, string][] }\nexport const BadMessages = [\n  'N/A',\n  'Yes. I speak English and French.',\n  \"Sorry, I'm not an entertainment bot. I've been created to provide answers about COVID-19 to the best of my ability.\",\n  'De rien',\n  'Désolé. Je ne suis pas un robot de conversation. Mon rôle est de répondre le plus efficacement possible à vos questions sur la COVID-19.',\n  'Au revoir',\n  'Merci',\n  'Thanks',\n  'Goodbye'\n]\n"]}