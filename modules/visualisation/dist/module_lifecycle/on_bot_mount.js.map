{"version":3,"sources":["../module_lifecycle/on_bot_mount.ts"],"names":["getOnBotMount","state","bp","botId","ghost","forBot","emb","PythonEmbedder","embedder","axiosConfig","http","getAxiosConfigForBot","predictor","BotpressPredictor","load"],"mappings":";;;;;;;AAGA;;AACA;;AAGO,SAASA,aAAT,CAAuBC,KAAvB,EAAyC;AAC9C,SAAO,OAAOC,EAAP,EAAuBC,KAAvB,KAAyC;AAC9CF,IAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACAF,IAAAA,KAAK,CAACG,KAAN,GAAcF,EAAE,CAACE,KAAH,CAASC,MAAT,CAAgBF,KAAhB,CAAd,CAF8C,CAI9C;;AACA,UAAMG,GAAG,GAAG,IAAIC,wBAAJ,CAAmBN,KAAK,CAACG,KAAzB,CAAZ;AACAH,IAAAA,KAAK,CAACO,QAAN,GAAiBF,GAAjB;AAEA,UAAMG,WAAW,GAAG,MAAMP,EAAE,CAACQ,IAAH,CAAQC,oBAAR,CAA6BR,KAA7B,CAA1B;AACAF,IAAAA,KAAK,CAACQ,WAAN,GAAoBA,WAApB;AAEA,UAAMG,SAAS,GAAG,IAAIC,qCAAJ,CAAsBJ,WAAtB,EAAmCN,KAAnC,CAAlB;AACAF,IAAAA,KAAK,CAACW,SAAN,GAAkBA,SAAlB;AAEA,UAAMX,KAAK,CAACO,QAAN,CAAeM,IAAf,CAAoBL,WAApB,CAAN,CAd8C,CAe9C;AACA;AACA;AACA;AACA;AACD,GApBD;AAqBD","sourceRoot":"/mnt/Documents/Projets/BotPress/botpress/modules/visualisation/src/backend","sourcesContent":["import * as sdk from 'botpress/sdk'\n\nimport { VisuState } from '../backend/typings'\nimport { BotpressPredictor } from '../models/botpress_predictor'\nimport { BotpressEmbedder, PythonEmbedder } from '../models/embedder'\nimport { getTrainTestDatas } from '../tools/data_loader'\n\nexport function getOnBotMount(state: VisuState) {\n  return async (bp: typeof sdk, botId: string) => {\n    state.botId = botId\n    state.ghost = bp.ghost.forBot(botId)\n\n    // const emb = new BotpressEmbedder(botId, state.ghost)\n    const emb = new PythonEmbedder(state.ghost)\n    state.embedder = emb\n\n    const axiosConfig = await bp.http.getAxiosConfigForBot(botId)\n    state.axiosConfig = axiosConfig\n\n    const predictor = new BotpressPredictor(axiosConfig, botId)\n    state.predictor = predictor\n\n    await state.embedder.load(axiosConfig)\n    // bp.logger.info('Embedding intents in train and test set')\n    // const { train, test } = await getTrainTestDatas(state)\n    // bp.logger.info('Done loading datas')\n    // state.trainDatas = train\n    // state.testDatas = test\n  }\n}\n"]}